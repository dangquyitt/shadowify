// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: extractor.proto

package extractor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request containing YouTube ID
type YoutubeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	YoutubeId     string                 `protobuf:"bytes,1,opt,name=youtube_id,json=youtubeId,proto3" json:"youtube_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YoutubeRequest) Reset() {
	*x = YoutubeRequest{}
	mi := &file_extractor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeRequest) ProtoMessage() {}

func (x *YoutubeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeRequest.ProtoReflect.Descriptor instead.
func (*YoutubeRequest) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{0}
}

func (x *YoutubeRequest) GetYoutubeId() string {
	if x != nil {
		return x.YoutubeId
	}
	return ""
}

// Response containing YouTube metadata
type YoutubeMetadataResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	FullTitle      string                 `protobuf:"bytes,3,opt,name=full_title,json=fullTitle,proto3" json:"full_title,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Duration       int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	DurationString string                 `protobuf:"bytes,6,opt,name=duration_string,json=durationString,proto3" json:"duration_string,omitempty"`
	Thumbnail      string                 `protobuf:"bytes,7,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Tags           []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories     []string               `protobuf:"bytes,9,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *YoutubeMetadataResponse) Reset() {
	*x = YoutubeMetadataResponse{}
	mi := &file_extractor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeMetadataResponse) ProtoMessage() {}

func (x *YoutubeMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeMetadataResponse.ProtoReflect.Descriptor instead.
func (*YoutubeMetadataResponse) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{1}
}

func (x *YoutubeMetadataResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetFullTitle() string {
	if x != nil {
		return x.FullTitle
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *YoutubeMetadataResponse) GetDurationString() string {
	if x != nil {
		return x.DurationString
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *YoutubeMetadataResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *YoutubeMetadataResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

// Segment in a transcript
type TranscriptSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         float32                `protobuf:"fixed32,1,opt,name=start,proto3" json:"start,omitempty"`
	End           float32                `protobuf:"fixed32,2,opt,name=end,proto3" json:"end,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptSegment) Reset() {
	*x = TranscriptSegment{}
	mi := &file_extractor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptSegment) ProtoMessage() {}

func (x *TranscriptSegment) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptSegment.ProtoReflect.Descriptor instead.
func (*TranscriptSegment) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{2}
}

func (x *TranscriptSegment) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TranscriptSegment) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *TranscriptSegment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Response containing YouTube transcript
type YoutubeTranscriptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LanguageCode  string                 `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Segments      []*TranscriptSegment   `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YoutubeTranscriptResponse) Reset() {
	*x = YoutubeTranscriptResponse{}
	mi := &file_extractor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YoutubeTranscriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YoutubeTranscriptResponse) ProtoMessage() {}

func (x *YoutubeTranscriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_extractor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YoutubeTranscriptResponse.ProtoReflect.Descriptor instead.
func (*YoutubeTranscriptResponse) Descriptor() ([]byte, []int) {
	return file_extractor_proto_rawDescGZIP(), []int{3}
}

func (x *YoutubeTranscriptResponse) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *YoutubeTranscriptResponse) GetSegments() []*TranscriptSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_extractor_proto protoreflect.FileDescriptor

const file_extractor_proto_rawDesc = "" +
	"\n" +
	"\x0fextractor.proto\x12\textractor\"/\n" +
	"\x0eYoutubeRequest\x12\x1d\n" +
	"\n" +
	"youtube_id\x18\x01 \x01(\tR\tyoutubeId\"\x97\x02\n" +
	"\x17YoutubeMetadataResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"full_title\x18\x03 \x01(\tR\tfullTitle\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x05R\bduration\x12'\n" +
	"\x0fduration_string\x18\x06 \x01(\tR\x0edurationString\x12\x1c\n" +
	"\tthumbnail\x18\a \x01(\tR\tthumbnail\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\t \x03(\tR\n" +
	"categories\"O\n" +
	"\x11TranscriptSegment\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x02R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x02R\x03end\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\"z\n" +
	"\x19YoutubeTranscriptResponse\x12#\n" +
	"\rlanguage_code\x18\x01 \x01(\tR\flanguageCode\x128\n" +
	"\bsegments\x18\x02 \x03(\v2\x1c.extractor.TranscriptSegmentR\bsegments2\xcc\x01\n" +
	"\x10ExtractorService\x12Y\n" +
	"\x16ExtractYoutubeMetadata\x12\x19.extractor.YoutubeRequest\x1a\".extractor.YoutubeMetadataResponse\"\x00\x12]\n" +
	"\x18ExtractYoutubeTranscript\x12\x19.extractor.YoutubeRequest\x1a$.extractor.YoutubeTranscriptResponse\"\x00B5Z3github.com/dangquyitt/shadowify/proto/gen/extractorb\x06proto3"

var (
	file_extractor_proto_rawDescOnce sync.Once
	file_extractor_proto_rawDescData []byte
)

func file_extractor_proto_rawDescGZIP() []byte {
	file_extractor_proto_rawDescOnce.Do(func() {
		file_extractor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_extractor_proto_rawDesc), len(file_extractor_proto_rawDesc)))
	})
	return file_extractor_proto_rawDescData
}

var file_extractor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_extractor_proto_goTypes = []any{
	(*YoutubeRequest)(nil),            // 0: extractor.YoutubeRequest
	(*YoutubeMetadataResponse)(nil),   // 1: extractor.YoutubeMetadataResponse
	(*TranscriptSegment)(nil),         // 2: extractor.TranscriptSegment
	(*YoutubeTranscriptResponse)(nil), // 3: extractor.YoutubeTranscriptResponse
}
var file_extractor_proto_depIdxs = []int32{
	2, // 0: extractor.YoutubeTranscriptResponse.segments:type_name -> extractor.TranscriptSegment
	0, // 1: extractor.ExtractorService.ExtractYoutubeMetadata:input_type -> extractor.YoutubeRequest
	0, // 2: extractor.ExtractorService.ExtractYoutubeTranscript:input_type -> extractor.YoutubeRequest
	1, // 3: extractor.ExtractorService.ExtractYoutubeMetadata:output_type -> extractor.YoutubeMetadataResponse
	3, // 4: extractor.ExtractorService.ExtractYoutubeTranscript:output_type -> extractor.YoutubeTranscriptResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_extractor_proto_init() }
func file_extractor_proto_init() {
	if File_extractor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_extractor_proto_rawDesc), len(file_extractor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_extractor_proto_goTypes,
		DependencyIndexes: file_extractor_proto_depIdxs,
		MessageInfos:      file_extractor_proto_msgTypes,
	}.Build()
	File_extractor_proto = out.File
	file_extractor_proto_goTypes = nil
	file_extractor_proto_depIdxs = nil
}
